package com.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class WelcomeController {

	// inject via application.properties
	@Value("${welcome.message:test}")
	private String message = "Hello World";

	@RequestMapping(value="/home")
	public String welcome(Map<String, Object> model) {
		model.put("message", this.message);
		return "welcome";
	}
	
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	@Autowired 
	private GameRepository gameRepository;
	@Autowired 
	private ScoreRepository scoreRepository;

	@GetMapping(path="/add/user") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String firstName,@RequestParam String lastName
			, @RequestParam String email,@RequestParam String pwd ) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setFirstName(firstName);
		n.setLastName(lastName);
		n.setPwd(pwd);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}
	
	@GetMapping(path="/add/game") // Map ONLY GET Requests
	public @ResponseBody String addNewGame (@RequestParam String name,@RequestParam Integer userId) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Game game = new Game();
		game.setName(name);
		game.setUserId(userId);
		gameRepository.save(game);
		return "Saved";
	}
	
	@GetMapping(path="/add/score") // Map ONLY GET Requests
	public @ResponseBody String addNewScore (@RequestParam Integer score,@RequestParam Integer userId,@RequestParam Integer gameId) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Score sc = new Score();
		sc.setScore(score);
		sc.setGameId(gameId);
		sc.setScoreId(userId);
		sc.setGameId(gameId);
		/*score.setUser(userRepository.findOne(userId));
		score.setGame(gameRepository.findOne(gameId));*/
		scoreRepository.save(sc);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}

}